<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JEPA on Juan Lebrero</title>
    <link>http://localhost:1313/es/tags/jepa/</link>
    <description>Recent content in JEPA on Juan Lebrero</description>
    <generator>Hugo</generator>
    <language>es</language>
    <lastBuildDate>Fri, 26 Sep 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/es/tags/jepa/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LLM-JEPA en la práctica: cómo sumar una pérdida en el espacio de embeddings mejora tus LLMs</title>
      <link>http://localhost:1313/es/posts/llm-jepa/</link>
      <pubDate>Fri, 26 Sep 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/es/posts/llm-jepa/</guid>
      <description>&lt;hr&gt;&#xA;&lt;p&gt;La mayor parte del entrenamiento de LLMs usa reconstrucción en espacio de entrada, por ejemplo next-token prediction. En visión, en cambio, las arquitecturas de &lt;strong&gt;Joint Embedding Predictive Architectures&lt;/strong&gt; aprendieron a entrenar en el &lt;strong&gt;espacio de embeddings&lt;/strong&gt; con beneficios claros para la representación. El paper &lt;strong&gt;LLM-JEPA&lt;/strong&gt; propone llevar esa idea a lenguaje y muestra mejoras consistentes en ajuste fino y señales prometedoras en preentrenamiento.&lt;/p&gt;&#xA;&lt;p&gt;A continuación te cuento &lt;strong&gt;qué es LLM-JEPA&lt;/strong&gt;, por qué funciona, qué mejoras reporta, y cómo implementarlo en tu stack con &lt;strong&gt;LoRA&lt;/strong&gt;, &lt;strong&gt;FSDP&lt;/strong&gt; y &lt;strong&gt;precisión mixta&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
